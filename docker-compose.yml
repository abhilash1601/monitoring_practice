version: "3.8"

services:
  # ---------- Demo Python app ----------
  demo-python:
    build: ./app
    container_name: demo-python
    ports:
      - "8000:8000"
    networks:
      - demo-net
    restart: unless-stopped

  # ---------- Prometheus ----------
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
      - prometheus-data:/prometheus
    networks:
      - demo-net
    depends_on:
      - demo-python
      - node-exporter
      - cadvisor
      - blackbox
    restart: unless-stopped

  # ---------- Alertmanager ----------
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml:ro
    networks:
      - demo-net
    restart: unless-stopped

  # ---------- node-exporter (host/VM metrics) ----------
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - demo-net
    restart: unless-stopped
    # NOTE: node-exporter inside Docker will expose the Linux VM/container metrics (on Docker Desktop with WSL2),
    # for true Windows host metrics use windows_exporter (see notes below).

  # ---------- cAdvisor (container-level metrics) ----------
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"    # cAdvisor UI & metrics (optional to expose)
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - demo-net
    restart: unless-stopped

  # ---------- Blackbox (external HTTPS checks) ----------
  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox/config.yml:/etc/blackbox/config.yml:ro
    command:
      - --config.file=/etc/blackbox/config.yml
    networks:
      - demo-net
    restart: unless-stopped

  # ---------- Grafana ----------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-app  # example, optional
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - demo-net
    restart: unless-stopped

volumes:
  prometheus-data:
  grafana-data:

networks:
  demo-net:
    driver: bridge
